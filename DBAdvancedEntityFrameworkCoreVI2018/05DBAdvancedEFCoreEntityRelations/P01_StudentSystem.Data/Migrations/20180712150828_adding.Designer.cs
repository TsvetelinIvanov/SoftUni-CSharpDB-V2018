// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P01_StudentSystem.Data;

namespace P01_StudentSystem.Data.Migrations
{
    [DbContext(typeof(StudentSystemContext))]
    [Migration("20180712150828_adding")]
    partial class adding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsUnicode(true);

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(true);

                    b.Property<decimal>("Price");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new { CourseId = 1, EndDate = new DateTime(2018, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Statistics", Price = 390m, StartDate = new DateTime(2018, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { CourseId = 2, EndDate = new DateTime(2018, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Marketing", Price = 390m, StartDate = new DateTime(2018, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { CourseId = 3, EndDate = new DateTime(2018, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Economics", Price = 390m, StartDate = new DateTime(2018, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { CourseId = 4, EndDate = new DateTime(2018, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Management", Price = 390m, StartDate = new DateTime(2018, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Homework", b =>
                {
                    b.Property<int>("HomeworkId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<int>("ContentType");

                    b.Property<int>("CourseId");

                    b.Property<int>("StudentId");

                    b.Property<DateTime>("SubmissionTime");

                    b.HasKey("HomeworkId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("HomeworkSubmissions");

                    b.HasData(
                        new { HomeworkId = 1, Content = "01Introduction", ContentType = 2, CourseId = 1, StudentId = 1, SubmissionTime = new DateTime(2018, 6, 1, 11, 30, 58, 0, DateTimeKind.Unspecified) },
                        new { HomeworkId = 2, Content = "01Introduction", ContentType = 2, CourseId = 1, StudentId = 2, SubmissionTime = new DateTime(2018, 6, 1, 11, 31, 58, 0, DateTimeKind.Unspecified) },
                        new { HomeworkId = 3, Content = "01Introduction", ContentType = 2, CourseId = 1, StudentId = 3, SubmissionTime = new DateTime(2018, 6, 1, 11, 32, 58, 0, DateTimeKind.Unspecified) },
                        new { HomeworkId = 4, Content = "01Introduction", ContentType = 2, CourseId = 1, StudentId = 4, SubmissionTime = new DateTime(2018, 6, 1, 11, 33, 58, 0, DateTimeKind.Unspecified) },
                        new { HomeworkId = 5, Content = "01Introduction", ContentType = 2, CourseId = 1, StudentId = 5, SubmissionTime = new DateTime(2018, 6, 1, 11, 34, 58, 0, DateTimeKind.Unspecified) },
                        new { HomeworkId = 6, Content = "01Introduction", ContentType = 2, CourseId = 1, StudentId = 6, SubmissionTime = new DateTime(2018, 6, 1, 11, 35, 58, 0, DateTimeKind.Unspecified) },
                        new { HomeworkId = 7, Content = "01Introduction", ContentType = 2, CourseId = 1, StudentId = 7, SubmissionTime = new DateTime(2018, 6, 1, 11, 36, 58, 0, DateTimeKind.Unspecified) },
                        new { HomeworkId = 8, Content = "01Introduction", ContentType = 2, CourseId = 1, StudentId = 8, SubmissionTime = new DateTime(2018, 6, 1, 11, 37, 58, 0, DateTimeKind.Unspecified) },
                        new { HomeworkId = 9, Content = "01Introduction", ContentType = 2, CourseId = 1, StudentId = 9, SubmissionTime = new DateTime(2018, 6, 1, 11, 38, 58, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Resource", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<int>("ResourceType");

                    b.Property<string>("Url")
                        .IsRequired()
                        .IsUnicode(false);

                    b.HasKey("ResourceId");

                    b.HasIndex("CourseId");

                    b.ToTable("Resources");

                    b.HasData(
                        new { ResourceId = 1, CourseId = 1, Name = "Introduction", ResourceType = 0, Url = "Url" },
                        new { ResourceId = 2, CourseId = 2, Name = "Introduction", ResourceType = 0, Url = "Url" },
                        new { ResourceId = 3, CourseId = 3, Name = "Introduction", ResourceType = 0, Url = "Url" },
                        new { ResourceId = 4, CourseId = 4, Name = "Introduction", ResourceType = 0, Url = "Url" }
                    );
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthday");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("CHAR(10)")
                        .IsUnicode(false);

                    b.Property<DateTime>("RegisteredOn");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new { StudentId = 1, Name = "Gun Xo", RegisteredOn = new DateTime(2018, 5, 1, 8, 30, 52, 0, DateTimeKind.Unspecified) },
                        new { StudentId = 2, Name = "Run Jo", RegisteredOn = new DateTime(2018, 5, 1, 8, 30, 53, 0, DateTimeKind.Unspecified) },
                        new { StudentId = 3, Name = "Vu Min", RegisteredOn = new DateTime(2018, 5, 1, 8, 30, 54, 0, DateTimeKind.Unspecified) },
                        new { StudentId = 4, Name = "Ran Pi", RegisteredOn = new DateTime(2018, 5, 1, 8, 30, 55, 0, DateTimeKind.Unspecified) },
                        new { StudentId = 5, Name = "Tan Su", RegisteredOn = new DateTime(2018, 5, 1, 8, 30, 56, 0, DateTimeKind.Unspecified) },
                        new { StudentId = 6, Name = "Mo Joy", RegisteredOn = new DateTime(2018, 5, 1, 8, 30, 57, 0, DateTimeKind.Unspecified) },
                        new { StudentId = 7, Name = "Min Xo", RegisteredOn = new DateTime(2018, 5, 1, 8, 30, 58, 0, DateTimeKind.Unspecified) },
                        new { StudentId = 8, Name = "Tin Pu", RegisteredOn = new DateTime(2018, 5, 1, 8, 30, 59, 0, DateTimeKind.Unspecified) },
                        new { StudentId = 9, Name = "Han Zin", RegisteredOn = new DateTime(2018, 5, 1, 8, 31, 1, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId");

                    b.Property<int>("CourseId");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Homework", b =>
                {
                    b.HasOne("P01_StudentSystem.Data.Models.Course", "Course")
                        .WithMany("HomeworkSubmissions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("P01_StudentSystem.Data.Models.Student", "Student")
                        .WithMany("HomeworkSubmissions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Resource", b =>
                {
                    b.HasOne("P01_StudentSystem.Data.Models.Course", "Course")
                        .WithMany("Resources")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.StudentCourse", b =>
                {
                    b.HasOne("P01_StudentSystem.Data.Models.Course", "Course")
                        .WithMany("StudentsEnrolled")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("P01_StudentSystem.Data.Models.Student", "Student")
                        .WithMany("CourseEnrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}